version: "3.8"

# Orchestrating the instrumentality services
services:

    # Landing site that has authentication capabilities
    sonata:
        image: instrumentalityfoundation/instrumentality:0.1.7
        restart: always
        ports:
            - "8080:8080"
        networks:
            - instrumentality

    # Blockchain API
    minuet:
        image: instrumentalityfoundation/api:0.1.7
        restart: always
        ports:
            - "9000:9000"
        networks:
            - instrumentality
            - instrumentality-blockchain
            - instrumentality-redis
        volumes:
            - "./private:/blockchain/private"
    
    # PostgreSQL Database for Iroha
    scherzo:
        image: library/postgres:latest
        restart: always
        expose:
            - "5432"
        networks:
            - instrumentality-blockchain
        environment:
            - POSTGRES_USER=orchestrator
            - POSTGRES_PASSWORD=instrumentality-test-pass
            - POSTGRES_DB=instrumentality
        depends_on:
            - minuet
    
    # Iroha container
    rondo:
        image: hyperledger/iroha:latest
        restart: always
        expose:
            - "50051"
        networks:
            - instrumentality-blockchain
        volumes:
            - "./iroha:/opt/iroha_data"
            - "blockstore:/tmp/block_store"
        environment:
            - IROHA_POSTGRES_HOST=scherzo
            - POSTGRES_PORT=5432
            - POSTGRES_PASSWORD=instrumentality-test-pass
            - POSTGRES_USER=orchestrator
            - KEY=genesisNode
        depends_on:
            - scherzo

    # Redis service
    requiem:
        image: redis:alpine
        command: ["redis-server", "--appendonly", "yes"]
        expose:
            - "6379"
        hostname: redis
        networks:
            - instrumentality-redis
        volumes:
            - redis-data:/data
        depends_on:
            - minuet
        
networks:
    instrumentality:
    instrumentality-blockchain:
    instrumentality-redis:

volumes:
    blockstore:
    redis-data: